{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Documents\\\\quote-generator\\\\pages\\\\[authorId].js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nexport default function Author() {\n  const router = useRouter();\n  const {\n    authorId\n  } = router.query;\n  const {\n    0: quotes,\n    1: setQuotes\n  } = useState([]);\n  useEffect(() => {\n    if (authorId) {\n      fetch(`https://quote-garden.onrender.com/api/v3/quotes?author=${authorId}`).then(response => response.json()).then(data => setQuotes(data.data));\n    }\n  }, [authorId]);\n\n  if (quotes.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Quotes by \", quotes[0].quoteAuthor]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: quotes.map(quote => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [quote.quoteText, \" - \", quote.quoteGenre]\n      }, quote._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/ASUS/OneDrive/Documents/quote-generator/pages/[authorId].js"],"names":["React","useEffect","useState","useRouter","Author","router","authorId","query","quotes","setQuotes","fetch","then","response","json","data","length","quoteAuthor","map","quote","quoteText","quoteGenre","_id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,eAAe,SAASC,MAAT,GAAkB;AAC/B,QAAMC,MAAM,GAAGF,SAAS,EAAxB;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAeD,MAAM,CAACE,KAA5B;AACA,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBP,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,QAAJ,EAAc;AACZI,MAAAA,KAAK,CACF,0DAAyDJ,QAAS,EADhE,CAAL,CAGGK,IAHH,CAGSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAHtB,EAIGF,IAJH,CAISG,IAAD,IAAUL,SAAS,CAACK,IAAI,CAACA,IAAN,CAJ3B;AAKD;AACF,GARQ,EAQN,CAACR,QAAD,CARM,CAAT;;AAUA,MAAIE,MAAM,CAACO,MAAP,KAAkB,CAAtB,EAAyB;AACvB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,4BACE;AAAA,+BAAeP,MAAM,CAAC,CAAD,CAAN,CAAUQ,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGR,MAAM,CAACS,GAAP,CAAYC,KAAD,iBACV;AAAA,mBACGA,KAAK,CAACC,SADT,SACuBD,KAAK,CAACE,UAD7B;AAAA,SAASF,KAAK,CAACG,GAAf;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nexport default function Author() {\r\n  const router = useRouter();\r\n  const { authorId } = router.query;\r\n  const [quotes, setQuotes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (authorId) {\r\n      fetch(\r\n        `https://quote-garden.onrender.com/api/v3/quotes?author=${authorId}`\r\n      )\r\n        .then((response) => response.json())\r\n        .then((data) => setQuotes(data.data));\r\n    }\r\n  }, [authorId]);\r\n\r\n  if (quotes.length === 0) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Quotes by {quotes[0].quoteAuthor}</h2>\r\n      <ul>\r\n        {quotes.map((quote) => (\r\n          <li key={quote._id}>\r\n            {quote.quoteText} - {quote.quoteGenre}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}