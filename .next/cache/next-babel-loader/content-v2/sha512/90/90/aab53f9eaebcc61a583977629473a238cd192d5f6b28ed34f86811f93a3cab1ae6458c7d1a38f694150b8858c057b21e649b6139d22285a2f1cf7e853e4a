{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Documents\\\\quote-generator\\\\pages\\\\[authorId].js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useRouter } from \"next/router\";\nexport default function Author() {\n  _s();\n\n  var router = useRouter();\n  var authorId = router.query.authorId;\n\n  var _useState = useState([]),\n      quotes = _useState[0],\n      setQuotes = _useState[1];\n\n  useEffect(function () {\n    if (authorId) {\n      fetch(\"https://quote-garden.onrender.com/api/v3/quotes?author=\".concat(authorId)).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return setQuotes(data.data);\n      });\n    }\n  }, [authorId]);\n\n  if (quotes.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Author\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Author, \"e6gLEixTDZEGHGqQWscVHKQtdE0=\", false, function () {\n  return [useRouter];\n});\n\n_c = Author;\n\nvar _c;\n\n$RefreshReg$(_c, \"Author\");","map":{"version":3,"sources":["C:/Users/ASUS/OneDrive/Documents/quote-generator/pages/[authorId].js"],"names":["React","useEffect","useState","useRouter","Author","router","authorId","query","quotes","setQuotes","fetch","then","response","json","data","length"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC/B,MAAMC,MAAM,GAAGF,SAAS,EAAxB;AAD+B,MAEvBG,QAFuB,GAEVD,MAAM,CAACE,KAFG,CAEvBD,QAFuB;;AAAA,kBAGHJ,QAAQ,CAAC,EAAD,CAHL;AAAA,MAGxBM,MAHwB;AAAA,MAGhBC,SAHgB;;AAK/BR,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIK,QAAJ,EAAc;AACZI,MAAAA,KAAK,kEAA2DJ,QAA3D,EAAL,CACGK,IADH,CACQ,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADhB,EAEGF,IAFH,CAEQ,UAAAG,IAAI;AAAA,eAAIL,SAAS,CAACK,IAAI,CAACA,IAAN,CAAb;AAAA,OAFZ;AAGD;AACF,GANQ,EAMN,CAACR,QAAD,CANM,CAAT;;AAQA,MAAIE,MAAM,CAACO,MAAP,KAAkB,CAAtB,EAAyB;AACvB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAjBuBX,M;UACPD,S;;;KADOC,M","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useRouter } from \"next/router\";\r\n\r\nexport default function Author() {\r\n  const router = useRouter();\r\n  const { authorId } = router.query;\r\n  const [quotes, setQuotes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (authorId) {\r\n      fetch(`https://quote-garden.onrender.com/api/v3/quotes?author=${authorId}`)\r\n        .then(response => response.json())\r\n        .then(data => setQuotes(data.data));\r\n    }\r\n  }, [authorId]);\r\n\r\n  if (quotes.length === 0) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  return <h1>Author</h1>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}