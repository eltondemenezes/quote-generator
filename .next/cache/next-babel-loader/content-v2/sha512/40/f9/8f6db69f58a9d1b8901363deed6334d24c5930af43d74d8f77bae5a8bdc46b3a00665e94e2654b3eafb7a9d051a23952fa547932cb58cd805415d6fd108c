{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Documents\\\\quote-generator\\\\pages\\\\index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Link from \"next/link\";\nimport Card from \"../components/Card\";\nimport classes from \"../styles/Home.module.css\"; // import circularArrows from \"../public/two-circular-arrows.png\";\n\nexport default function HomePage() {\n  const {\n    0: count,\n    1: setCount\n  } = useState(0);\n  const {\n    0: quote,\n    1: setQuote\n  } = useState(null);\n  useEffect(() => {\n    fetch(\"https://quote-garden.onrender.com/api/v3/quotes/random\").then(response => response.json()).then(data => setQuote(data.data[0]));\n  }, [count]);\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.randomButton,\n      onClick: () => setCount(count + 1),\n      children: \"random\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\\"\", quote.quoteText, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.authorButton,\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/\" + quote.quoteAuthor,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: classes.author,\n            children: quote.quoteAuthor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: classes.genre,\n            children: quote.quoteGenre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: classes.arrow,\n            children: \"\\u2192\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["C:/Users/ASUS/OneDrive/Documents/quote-generator/pages/index.js"],"names":["React","useEffect","useState","Link","Card","classes","HomePage","count","setCount","quote","setQuote","fetch","then","response","json","data","randomButton","quoteText","authorButton","quoteAuthor","author","genre","quoteGenre","arrow"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CACA;;AAEA,eAAe,SAASC,QAAT,GAAoB;AACjC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM;AAAA,OAACO,KAAD;AAAA,OAAQC;AAAR,MAAoBR,QAAQ,CAAC,IAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,KAAK,CAAC,wDAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAUL,QAAQ,CAACK,IAAI,CAACA,IAAL,CAAU,CAAV,CAAD,CAF1B;AAGD,GAJQ,EAIN,CAACR,KAAD,CAJM,CAAT;;AAMA,MAAI,CAACE,KAAL,EAAY;AACV,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,4BACE;AACE,MAAA,SAAS,EAAEJ,OAAO,CAACW,YADrB;AAEE,MAAA,OAAO,EAAE,MAAMR,QAAQ,CAACD,KAAK,GAAG,CAAT,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,IAAD;AAAA,6BACE;AAAA,yBAAKE,KAAK,CAACQ,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF,eAUE;AAAK,MAAA,SAAS,EAAEZ,OAAO,CAACa,YAAxB;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAE,MAAMT,KAAK,CAACU,WAAxB;AAAA,+BACE;AAAA,kCACE;AAAG,YAAA,SAAS,EAAEd,OAAO,CAACe,MAAtB;AAAA,sBAA+BX,KAAK,CAACU;AAArC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAG,YAAA,SAAS,EAAEd,OAAO,CAACgB,KAAtB;AAAA,sBAA8BZ,KAAK,CAACa;AAApC;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAG,YAAA,SAAS,EAAEjB,OAAO,CAACkB,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA,kBADF;AAuBD","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Link from \"next/link\";\nimport Card from \"../components/Card\";\nimport classes from \"../styles/Home.module.css\";\n// import circularArrows from \"../public/two-circular-arrows.png\";\n\nexport default function HomePage() {\n  const [count, setCount] = useState(0);\n  const [quote, setQuote] = useState(null);\n\n  useEffect(() => {\n    fetch(\"https://quote-garden.onrender.com/api/v3/quotes/random\")\n      .then((response) => response.json())\n      .then((data) => setQuote(data.data[0]));\n  }, [count]);\n\n  if (!quote) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      <button\n        className={classes.randomButton}\n        onClick={() => setCount(count + 1)}\n      >\n        random\n      </button>\n      <Card>\n        <p>\"{quote.quoteText}\"</p>\n      </Card>\n      <div className={classes.authorButton}>\n        <Link href={\"/\" + quote.quoteAuthor}>\n          <div>\n            <p className={classes.author}>{quote.quoteAuthor}</p>\n            <p className={classes.genre}>{quote.quoteGenre}</p>\n            <p className={classes.arrow}>â†’</p>\n          </div>\n\n        </Link>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}