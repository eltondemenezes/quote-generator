{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Documents\\\\quote-generator\\\\pages\\\\[authorId].js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport classes from \"../styles/Author.module.css\";\nimport Card from \"../components/Card\";\nexport default function Author() {\n  const router = useRouter();\n  const {\n    authorId\n  } = router.query;\n  const {\n    0: quotes,\n    1: setQuotes\n  } = useState([]);\n  useEffect(() => {\n    if (authorId) {\n      fetch(`https://quote-garden.onrender.com/api/v3/quotes?author=${authorId}`).then(response => response.json()).then(data => setQuotes(data.data));\n    }\n  }, [authorId]);\n\n  if (quotes.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: classes.title,\n      children: quotes[0].quoteAuthor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), quotes.map(quote => /*#__PURE__*/_jsxDEV(Card, {\n      children: quote.quoteText\n    }, quote._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/ASUS/OneDrive/Documents/quote-generator/pages/[authorId].js"],"names":["React","useEffect","useState","useRouter","classes","Card","Author","router","authorId","query","quotes","setQuotes","fetch","then","response","json","data","length","title","quoteAuthor","map","quote","quoteText","_id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AAEA,eAAe,SAASC,MAAT,GAAkB;AAC/B,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAeD,MAAM,CAACE,KAA5B;AACA,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBT,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,QAAJ,EAAc;AACZI,MAAAA,KAAK,CACF,0DAAyDJ,QAAS,EADhE,CAAL,CAGGK,IAHH,CAGSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAHtB,EAIGF,IAJH,CAISG,IAAD,IAAUL,SAAS,CAACK,IAAI,CAACA,IAAN,CAJ3B;AAKD;AACF,GARQ,EAQN,CAACR,QAAD,CARM,CAAT;;AAUA,MAAIE,MAAM,CAACO,MAAP,KAAkB,CAAtB,EAAyB;AACvB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAEb,OAAO,CAACc,KAAvB;AAAA,gBAA+BR,MAAM,CAAC,CAAD,CAAN,CAAUS;AAAzC;AAAA;AAAA;AAAA;AAAA,YADF,EAEGT,MAAM,CAACU,GAAP,CAAYC,KAAD,iBACV,QAAC,IAAD;AAAA,gBAAuBA,KAAK,CAACC;AAA7B,OAAWD,KAAK,CAACE,GAAjB;AAAA;AAAA;AAAA;AAAA,YADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport classes from \"../styles/Author.module.css\";\r\nimport Card from \"../components/Card\";\r\n\r\nexport default function Author() {\r\n  const router = useRouter();\r\n  const { authorId } = router.query;\r\n  const [quotes, setQuotes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (authorId) {\r\n      fetch(\r\n        `https://quote-garden.onrender.com/api/v3/quotes?author=${authorId}`\r\n      )\r\n        .then((response) => response.json())\r\n        .then((data) => setQuotes(data.data));\r\n    }\r\n  }, [authorId]);\r\n\r\n  if (quotes.length === 0) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2 className={classes.title}>{quotes[0].quoteAuthor}</h2>\r\n      {quotes.map((quote) => (\r\n        <Card key={quote._id}>{quote.quoteText}</Card>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}