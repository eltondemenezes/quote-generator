{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Documents\\\\quote-generator\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nexport default function HomePage() {\n  _s();\n\n  var _useState = useState(null),\n      quote = _useState[0],\n      setQuote = _useState[1];\n\n  useEffect(function () {\n    fetch(\"https://quote-garden.onrender.com/api/v3/quotes/random\").then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return setQuote(data.data[0]);\n    });\n  }, []);\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: quote.quoteText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"- \", quote.quoteAuthor]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Genre: \", quote.quoteGenre]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HomePage, \"pHUr4/1SkZ+pqek8O0wcMu7nkro=\");\n\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/Users/ASUS/OneDrive/Documents/quote-generator/pages/index.js"],"names":["React","useEffect","useState","HomePage","quote","setQuote","fetch","then","response","json","data","quoteText","quoteAuthor","quoteGenre"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAAA,kBACPD,QAAQ,CAAC,IAAD,CADD;AAAA,MAC1BE,KAD0B;AAAA,MACnBC,QADmB;;AAGjCJ,EAAAA,SAAS,CAAC,YAAM;AACdK,IAAAA,KAAK,CAAC,wDAAD,CAAL,CACGC,IADH,CACQ,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KADR,EAEGF,IAFH,CAEQ,UAACG,IAAD;AAAA,aAAUL,QAAQ,CAACK,IAAI,CAACA,IAAL,CAAU,CAAV,CAAD,CAAlB;AAAA,KAFR;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,MAAI,CAACN,KAAL,EAAY;AACV,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,4BACE;AAAA,gBAAKA,KAAK,CAACO;AAAX;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,uBAAMP,KAAK,CAACQ,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,4BAAWR,KAAK,CAACS,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GApBuBV,Q;;KAAAA,Q","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nexport default function HomePage() {\n  const [quote, setQuote] = useState(null);\n\n  useEffect(() => {\n    fetch(\"https://quote-garden.onrender.com/api/v3/quotes/random\")\n      .then((response) => response.json())\n      .then((data) => setQuote(data.data[0]));\n  }, []);\n\n  if (!quote) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <h2>{quote.quoteText}</h2>\n      <p>- {quote.quoteAuthor}</p>\n      <p>Genre: {quote.quoteGenre}</p>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}