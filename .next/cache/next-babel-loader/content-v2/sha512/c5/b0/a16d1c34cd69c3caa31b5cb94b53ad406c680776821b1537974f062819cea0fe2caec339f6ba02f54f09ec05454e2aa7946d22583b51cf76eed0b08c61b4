{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Documents\\\\quote-generator\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Link from \"next/link\"; // import circularArrows from \"../public/two-circular-arrows.png\";\n\nexport default function HomePage() {\n  _s();\n\n  var _useState = useState(0),\n      count = _useState[0],\n      setCount = _useState[1];\n\n  var _useState2 = useState(null),\n      quote = _useState2[0],\n      setQuote = _useState2[1];\n\n  useEffect(function () {\n    fetch(\"https://quote-garden.onrender.com/api/v3/quotes/random\").then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return setQuote(data.data[0]);\n    });\n  }, [count]);\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return setCount(count + 1);\n      },\n      children: \"random\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: quote.quoteText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/\" + quote.quoteAuthor,\n        children: quote.quoteAuthor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(HomePage, \"HCJWHqjKASDIjLCLrssHljlMU7s=\");\n\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/Users/ASUS/OneDrive/Documents/quote-generator/pages/index.js"],"names":["React","useEffect","useState","Link","HomePage","count","setCount","quote","setQuote","fetch","then","response","json","data","quoteText","quoteAuthor"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CACA;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAAA,kBACPF,QAAQ,CAAC,CAAD,CADD;AAAA,MAC1BG,KAD0B;AAAA,MACnBC,QADmB;;AAAA,mBAEPJ,QAAQ,CAAC,IAAD,CAFD;AAAA,MAE1BK,KAF0B;AAAA,MAEnBC,QAFmB;;AAIjCP,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,KAAK,CAAC,wDAAD,CAAL,CACGC,IADH,CACQ,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KADR,EAEGF,IAFH,CAEQ,UAACG,IAAD;AAAA,aAAUL,QAAQ,CAACK,IAAI,CAACA,IAAL,CAAU,CAAV,CAAD,CAAlB;AAAA,KAFR;AAGD,GAJQ,EAIN,CAACR,KAAD,CAJM,CAAT;;AAMA,MAAI,CAACE,KAAL,EAAY;AACV,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAE;AAAA,eAAMD,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAd;AAAA,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE;AAAA,kBAAKE,KAAK,CAACO;AAAX;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAE,MAAMP,KAAK,CAACQ,WAAxB;AAAA,kBAAsCR,KAAK,CAACQ;AAA5C;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AASD;;GAvBuBX,Q;;KAAAA,Q","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Link from \"next/link\";\n// import circularArrows from \"../public/two-circular-arrows.png\";\n\nexport default function HomePage() {\n  const [count, setCount] = useState(0);\n  const [quote, setQuote] = useState(null);\n\n  useEffect(() => {\n    fetch(\"https://quote-garden.onrender.com/api/v3/quotes/random\")\n      .then((response) => response.json())\n      .then((data) => setQuote(data.data[0]));\n  }, [count]);\n\n  if (!quote) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      <button onClick={() => setCount(count + 1)}>random</button>\n      <div>\n        <h2>{quote.quoteText}</h2>\n        <Link href={\"/\" + quote.quoteAuthor}>{quote.quoteAuthor}</Link>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}